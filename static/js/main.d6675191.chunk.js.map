{"version":3,"sources":["components/Recipe/index.js","pages/Start/index.js","settings.js","components/Option/index.js","components/OptionTitle/index.js","components/Form/index.js","pages/Home/index.js","components/FullRecipeHeader/index.js","components/Nutrient/index.js","components/IngredientList/index.js","pages/FullRecipe/index.js","App.js","index.js"],"names":["Recipe","title","img","recipeID","link","substr","className","to","src","alt","clicked","Start","useState","start","setStart","onClick","APP_ID","APP_KEY","Option","backgroundImg","text","selected","style","backgroundImage","OptionTitle","children","Form","setRecipes","search","setSearch","query","setQuery","mealType","setMealType","diet","setDiet","cuisine","setCuisine","clickedMealType","type","includes","filter","existingType","clickedDiet","clickedCuisine","getRecipes","useCallback","a","URL","length","join","fetch","response","json","data","hits","window","alert","useEffect","onSubmit","e","preventDefault","value","onChange","target","fontSize","Home","recipes","map","recipe","_links","calories","label","image","self","href","url","FullRecipeHeader","rel","Nutirent","quantity","unit","Math","round","IngredientList","ingredients","food","foodId","FullRecipe","setRecipe","id","useParams","getFullRecipe","Provider","dietLabels","index","Nutrient","totalNutrients","FAT","CHOCDF","ENERC_KCAL","PROCNT","App","ReactDOM","render","path","element","document","getElementById"],"mappings":"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","file":"static/js/main.d6675191.chunk.js","sourcesContent":["import React from 'react';\nimport './styles.css';\nimport { Link } from 'react-router-dom';\n\nfunction Recipe({ title, img, link }) {\n    const recipeID = link.substr(38, 32);\n\n    return (\n        <Link className='recipe-ctn' to={recipeID}>\n            <img src={img} alt='food-pic' className='food-img' />\n            <div className='recipe-info'>\n                <h1>{title}</h1>\n            </div>\n        </Link>\n    );\n}\n\nexport default Recipe;\n","import './styles.css';\nimport { useState } from 'react';\n\nlet clicked = false;\n\nfunction Start() {\n    const [start, setStart] = useState(true);\n\n    const handleStart = () => {\n        setStart(false);\n        clicked = true;\n    };\n\n    return (\n        <div\n            className={`img${start && !clicked ? '' : ' clicked'}`}\n            onClick={handleStart}\n        >\n            <h1>\n                Tap to <br />\n                get started\n            </h1>\n        </div>\n    );\n}\n\nexport default Start;\n","export const APP_ID = 'ee6ac23f';\nexport const APP_KEY = '6091bdd464535a22eedccbf38f8a3270';\n\n//Antonios nycklar\n// export const APP_ID = '394ddf60';\n// export const APP_KEY = '8a7e69b72608a85c86710f92ca118ceb';\n","import './styles.css';\n\nexport default function Option({ backgroundImg, text, selected, onClick }) {\n    return (\n        <div\n            onClick={onClick}\n            className={`option${selected ? ' selected' : ''}`}\n        >\n            <img alt='' style={{ backgroundImage: `url(${backgroundImg})` }} />\n            <h3>{text}</h3>\n        </div>\n    );\n}\n","import './styles.css';\n\nfunction OptionTitle({ children }) {\n    return <h2 className='option-title'>{children}</h2>;\n}\n\nexport default OptionTitle;\n","import { useEffect, useState, useCallback } from 'react';\nimport { APP_ID, APP_KEY } from '../../settings';\nimport * as fiIcons from 'react-icons/fi';\n\nimport Option from '../../components/Option';\nimport OptionTitle from '../../components/OptionTitle';\n\nimport './styles.css';\n\nexport default function Form({ setRecipes }) {\n    const [search, setSearch] = useState('');\n    const [query, setQuery] = useState('');\n    const [mealType, setMealType] = useState([]);\n    const [diet, setDiet] = useState([]);\n    const [cuisine, setCuisine] = useState([]);\n\n    const clickedMealType = (type) => {\n        if (mealType.includes(type)) {\n            setMealType(\n                mealType.filter((existingType) => existingType !== type)\n            );\n        } else {\n            setMealType([...mealType, type]);\n        }\n    };\n\n    const clickedDiet = (type) => {\n        if (diet.includes(type)) {\n            setDiet(diet.filter((existingType) => existingType !== type));\n        } else {\n            setDiet([...diet, type]);\n        }\n    };\n\n    const clickedCuisine = (type) => {\n        if (cuisine.includes(type)) {\n            setCuisine(cuisine.filter((existingType) => existingType !== type));\n        } else {\n            setCuisine([...cuisine, type]);\n        }\n    };\n\n    const getRecipes = useCallback(async () => {\n        let URL = `https://api.edamam.com/api/recipes/v2?type=public&q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n        if (mealType.length) {\n            URL += `&mealType=${mealType.join('&mealType=')}`;\n        }\n\n        if (diet.length) {\n            URL += `&diet=${diet.join('&diet=')}`;\n        }\n\n        if (cuisine.length) {\n            URL += `&cuisineType=${cuisine.join('&cuisineType=')}`;\n        }\n\n        try {\n            const response = await fetch(URL);\n            const data = await response.json();\n            setRecipes(data.hits);\n        } catch (error) {\n            window.alert('Too many API calls!');\n        }\n    }, [query, setRecipes, mealType, diet, cuisine]);\n\n    useEffect(() => {\n        getRecipes();\n    }, [getRecipes]);\n\n    const handleChange = (e) => {\n        setSearch(e.target.value);\n    };\n\n    // API request is made on submit\n    const getSearch = (e) => {\n        e.preventDefault();\n\n        setQuery(search);\n\n        setSearch('');\n    };\n\n    return (\n        <div className='form-ctn'>\n            <form className='search-form' onSubmit={getSearch}>\n                <input\n                    className='search-bar'\n                    type='text'\n                    value={search}\n                    onChange={handleChange}\n                ></input>\n                <button className='search-btn' type='submit'>\n                    <fiIcons.FiSearch style={{ fontSize: '23px' }} />\n                </button>\n            </form>\n            <OptionTitle>MEAL TYPE</OptionTitle>\n            <div className='option-ctn'>\n                <Option\n                    selected={mealType.includes('breakfast')}\n                    text='Breakfast'\n                    onClick={() => clickedMealType('breakfast')}\n                    backgroundImg='/images/breakfast.jpg'\n                />\n                <Option\n                    selected={mealType.includes('lunch')}\n                    text='Lunch'\n                    onClick={() => clickedMealType('lunch')}\n                    backgroundImg='/images/lunch.jpg'\n                />\n                <Option\n                    selected={mealType.includes('dinner')}\n                    onClick={() => clickedMealType('dinner')}\n                    text='Dinner'\n                    backgroundImg='/images/dinner.jpg'\n                />\n                <Option\n                    selected={mealType.includes('snack')}\n                    onClick={() => clickedMealType('snack')}\n                    text='Snack'\n                    backgroundImg='/images/snack.jpg'\n                />\n            </div>\n            <hr />\n\n            <OptionTitle>DIET</OptionTitle>\n            <div className='option-ctn'>\n                <Option\n                    selected={diet.includes('high-fiber')}\n                    onClick={() => clickedDiet('high-fiber')}\n                    text='High-fiber'\n                    backgroundImg='/images/fiber.jpg'\n                />\n                <Option\n                    selected={diet.includes('high-protein')}\n                    onClick={() => clickedDiet('high-protein')}\n                    text='High-protein'\n                    backgroundImg='/images/protein.jpg'\n                />\n                <Option\n                    selected={diet.includes('low-carb')}\n                    onClick={() => clickedDiet('low-carb')}\n                    text='Low-carb'\n                    backgroundImg='/images/carb.jpg'\n                />\n                <Option\n                    selected={diet.includes('low-fat')}\n                    onClick={() => clickedDiet('low-fat')}\n                    text='Low-fat'\n                    backgroundImg='/images/fat.jpg'\n                />\n            </div>\n            <hr />\n            <OptionTitle>CUISINE</OptionTitle>\n            <div className='option-ctn'>\n                <Option\n                    selected={cuisine.includes('italian')}\n                    onClick={() => clickedCuisine('italian')}\n                    text='Italian'\n                    backgroundImg='/images/italian.jpg'\n                />\n                <Option\n                    selected={cuisine.includes('american')}\n                    onClick={() => clickedCuisine('american')}\n                    text='American'\n                    backgroundImg='/images/american.jpg'\n                />\n                <Option\n                    selected={cuisine.includes('asian')}\n                    onClick={() => clickedCuisine('asian')}\n                    text='Asian'\n                    backgroundImg='/images/asian.jpg'\n                />\n                <Option\n                    selected={cuisine.includes('indian')}\n                    onClick={() => clickedCuisine('indian')}\n                    text='Indian'\n                    backgroundImg='/images/indian.jpg'\n                />\n                <Option\n                    selected={cuisine.includes('mexican')}\n                    onClick={() => clickedCuisine('mexican')}\n                    text='Mexican'\n                    backgroundImg='/images/mexican.jpg'\n                />\n                <Option\n                    selected={cuisine.includes('nordic')}\n                    onClick={() => clickedCuisine('nordic')}\n                    text='Nordic'\n                    backgroundImg='/images/nordic.jpg'\n                />\n                <Option\n                    selected={cuisine.includes('middle eastern')}\n                    onClick={() => clickedCuisine('middle eastern')}\n                    text='Middle Eastern'\n                    backgroundImg='/images/middleeastern.jpg'\n                />\n            </div>\n        </div>\n    );\n}\n","import './styles.css';\nimport { useState } from 'react';\n\nimport Recipe from '../../components/Recipe';\nimport Start from '../Start';\nimport Form from '../../components/Form';\n\nfunction Home() {\n    const [recipes, setRecipes] = useState([]);\n\n    return (\n        <div className='home'>\n            <h1>Find your favourite diet recipes</h1>\n            <Form setRecipes={setRecipes} />\n            <div className='recipe-container'>\n                {recipes.map(({ recipe, _links }) => (\n                    <Recipe\n                        calories={recipe.calories}\n                        title={recipe.label}\n                        key={recipe.url}\n                        img={recipe.image}\n                        link={_links.self.href}\n                    />\n                ))}\n            </div>\n\n            <Start />\n        </div>\n    );\n}\n\nexport default Home;\n","import './styles.css';\n\nfunction FullRecipeHeader({ recipe }) {\n    return (\n        <div className='full-recipe-header'>\n            <img src={recipe.image} alt='' />\n            <a href={recipe.url} target='_blank' rel='noreferrer'>\n                <button className='instruction-btn'>To full recipe</button>\n            </a>\n        </div>\n    );\n}\n\nexport default FullRecipeHeader;\n","import './styles.css';\n\nfunction Nutirent({ label, quantity, unit }) {\n    return (\n        <div className='nutrient'>\n            <p>{label}</p>\n            <p>\n                {Math.round(quantity)} {unit}\n            </p>\n        </div>\n    );\n}\n\nexport default Nutirent;\n","import './styles.css';\n\nfunction IngredientList({ ingredients }) {\n    return (\n        <ol className='ingredient-list'>\n            {ingredients.map(({ food, foodId, image }) => (\n                <li key={foodId}>\n                    <img alt='' className='ingredient-img' src={image} />\n                    <p className='ingredient'>{food}</p>\n                </li>\n            ))}\n        </ol>\n    );\n}\n\nexport default IngredientList;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport * as fiIcons from 'react-icons/fi';\nimport { IconContext } from 'react-icons';\n\nimport './styles.css';\n\nimport { APP_ID, APP_KEY } from '../../settings';\nimport FullRecipeHeader from '../../components/FullRecipeHeader';\nimport Nutrient from '../../components/Nutrient';\nimport IngredientList from '../../components/IngredientList';\n\nfunction FullRecipe() {\n    const [recipe, setRecipe] = useState();\n\n    const { id } = useParams();\n\n    const getFullRecipe = useCallback(async () => {\n        try {\n            const response = await fetch(\n                `https://api.edamam.com/api/recipes/v2/${id}?type=public&app_id=${APP_ID}&app_key=${APP_KEY}`\n            );\n            const data = await response.json();\n\n            setRecipe(data.recipe);\n        } catch (error) {\n            window.alert('Could not find recipe.');\n        }\n    }, [id]);\n\n    useEffect(() => {\n        getFullRecipe();\n    }, [getFullRecipe]);\n\n    if (!recipe) {\n        return false;\n    }\n\n    return (\n        <div className='full-recipe'>\n            <IconContext.Provider value={{ className: 'arrow-icon' }}>\n                <Link to={'/'}>\n                    <fiIcons.FiArrowLeft />\n                </Link>\n            </IconContext.Provider>\n            <FullRecipeHeader recipe={recipe} />\n            <div className='full-recipe-info'>\n                <h1 className='full-recipe-title'>{recipe.label}</h1>\n                <div className='label-ctn'>\n                    {recipe.dietLabels.map((label, index) => (\n                        <span key={index} className='label'>\n                            {label}\n                        </span>\n                    ))}\n                </div>\n                <h2>Nutrients</h2>\n                <div className='nutrient-ctn'>\n                    <Nutrient {...recipe.totalNutrients.FAT} />\n                    <Nutrient {...recipe.totalNutrients.CHOCDF} />\n                    <Nutrient {...recipe.totalNutrients.ENERC_KCAL} />\n                    <Nutrient {...recipe.totalNutrients.PROCNT} />\n                </div>\n\n                <h2>Ingredients</h2>\n                <IngredientList ingredients={recipe.ingredients} />\n            </div>\n        </div>\n    );\n}\n\nexport default FullRecipe;\n","import './App.css';\nimport { Outlet } from 'react-router-dom';\n\nfunction App() {\n    return (\n        <div>\n            <Outlet />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport FullRecipe from './pages/FullRecipe';\n\nimport App from './App';\n\nReactDOM.render(\n    <BrowserRouter>\n        <Routes>\n            <Route path='/' element={<App />}>\n                <Route index element={<Home />} />\n                <Route path=':id' element={<FullRecipe />} />\n            </Route>\n        </Routes>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}